# Default values to take a look https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/HEAD/jupyterhub/values.yaml

# This configuration is to use specific Karpenter provisioner to test
singleuser:
  # profileList: # Enable GPU accelerator for every user
  #   - display_name: "GPU Server"
  #     description: "Spawns a notebook server with access to a GPU"
  #     kubespawner_override:
  #       extra_resource_limits:
  #         nvidia.com/gpu: "1"
  image:
    name: public.ecr.aws/t9v6l2p3/jupyter-hub-test-fmops # Notebook image can change depending on what do you want to be already installed
    tag: "1"
  nodeSelector:
    node-type: jupyter-hub
  cpu:
    limit: 4
    guarantee: 2
  memory:
    limit: 4G
    guarantee: 2G
  storage:
    type: "static"
    static:
      pvcName: "efs-persist"
      subPath: "home/{username}"
    extraVolumes:
    - name: jupyterhub-shared
      persistentVolumeClaim:
        claimName: efs-persist-shared
    extraVolumeMounts:
    - name: jupyterhub-shared
      mountPath: /home/shared
      readOnly: false
  serviceAccountName: jupyterhub-single-user
  allowPrivilegeEscalation: true
  extraPodConfig:
    securityContext:
        fsGroup: 100 # Same Group as user Jovyan that ins responsible for notebook process, it is needed to use IRSA
  extraEnv:
    GRANT_SUDO: "yes"
    NOTEBOOK_ARGS: "--allow-root"
    CHOWN_HOME: "yes"
    CHOWN_HOME_OPTS: "-R"
    CHOWN_EXTRA: "/home/shared"
  cmd: start-singleuser.sh
  uid: 0
  fsGid: 0

scheduling:
  userScheduler:
    enabled: false
  podPriority:
    enabled: true
  userPlaceholder:
    enabled: true
    replicas: 1
  userPods:
    nodeAffinity:
      matchNodePurpose: prefer

proxy:
  service:
    type: LoadBalancer
    annotations: {}
  chp:
    nodeSelector:
      node-type: jupyter-hub

cull:
  enabled: true
  timeout: 3600
  every: 300

hub:
  # config:
  #   KubeSpawner:
  #     pod_security_context:
  #       fsGroup: 65534
  nodeSelector:
    node-type: jupyter-hub

global:
  safeToShowValues: false



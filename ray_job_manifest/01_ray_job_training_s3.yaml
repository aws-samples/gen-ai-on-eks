####################################################################################
#This manifest launches a new RayCluster using GPU instances.
#When the job is completed the cluster resources are deleted for cost optimization
####################################################################################
apiVersion: ray.io/v1
kind: RayJob
metadata:
  name: ray-job-finetuning
  namespace: ray-cluster-train
spec:
  # submissionMode specifies how RayJob submits the Ray job to the RayCluster.
  # The default value is "K8sJobMode", meaning RayJob will submit the Ray job via a submitter Kubernetes Job.
  # The alternative value is "HTTPMode", indicating that KubeRay will submit the Ray job by sending an HTTP request to the RayCluster.
  # submissionMode: "K8sJobMode"
  #entrypoint: "aws s3 cp s3://data-on-eks-genai/scripts/train_script.py train_script.py || true;chmod +x train_script.py && python train_script.py"
  entrypoint: "chmod +x train_script.py && python train_script.py"
  #entrypoint: ""
  # shutdownAfterJobFinishes specifies whether the RayCluster should be deleted after the RayJob finishes. Default is false.
  #shutdownAfterJobFinishes: true

  # ttlSecondsAfterFinished specifies the number of seconds after which the RayCluster will be deleted after the RayJob finishes.
  #ttlSecondsAfterFinished: 60

  # activeDeadlineSeconds is the duration in seconds that the RayJob may be active before
  # KubeRay actively tries to terminate the RayJob; value must be positive integer.
  # activeDeadlineSeconds: 120

  # RuntimeEnvYAML represents the runtime environment configuration provided as a multi-line YAML string.
  # See https://docs.ray.io/en/latest/ray-core/handling-dependencies.html for details.
  # (New in KubeRay version 1.0.)
  runtimeEnvYAML: |
    working_dir: "https://data-on-eks-genai.s3.amazonaws.com/scripts/train_script.zip?AWSAccessKeyId=ASIAZXNCLXBUZXFZNOFO&Signature=qmedsf7Gsx7CAFrj7N9wnPRftVg%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEBIaCXVzLXdlc3QtMiJIMEYCIQDxBzoxP8e4nhkRGvjRuYa%2FvfkC0JcW%2FzdkDMSfUGssvQIhAKcm4O%2FKQuXAGbyUgTrecMZhYuVqiBlYCPQqORGnKT1tKpQFCJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjY4NzQ0NzkyMTY5IgzddfZiLezpDkZTRewq6AQ5pPkQTdDCitsqe88BuVRjMj7LJcXvoR2%2BKjoDQUBdi4T13Qto6xvAFCpmjVsQXxZYoYHme8FnMZGINBL0zzqOMh9X%2F6Wgizb%2BqBTfpTsZGXdnhM4nD626uoDszmhsOJ%2FMO1BDJ6o1Wg1VKmVBntzuDvSGJB2ZbMlE3pNBt449MUqk4TkEWIz%2BJqbplsvcg%2FVCLT3mpwHIxzuzJvB482lDoSwtMtE4MDdbS31jBTq4aiZam0NXdd0JuJ89dukhyuy6GqTj917%2FW%2BdvWF3iilJzV%2FHld%2BNUhS62oSiRlgKLnQKxEtR1%2Bak8GqvQhzzhzBCZ%2BxqmwZqQSGLLddXlcn0FPjcMm%2FAvZGrt7Y8NurBJZ9KKI%2B5NaMWExnkVbzzoJHJ%2BFM8ngw6z7FxRfzIlD%2FyfnttHS0ZojySMjnFcuWNtikB9IM07uA2AkIJLlgIr6EpK9oHg3RBS01FQBe6aJyWahKyU7NtFsJGQakb5gewEmW5RjzK8mOmtc7ubFkzECszkMIxmwRZTHkyuITaa0ATS6bNeo5pvGaLmNStm6DldmT8ATgJVNemXQktG%2BU0gNxVmlNDG%2BaODITPGNRjaM%2FMCise3QLu7tTtyTH%2BUYrktf3wF77d5oZ2vMB4GyEJC%2BhyTp5F80uL1XT59UjHnDFZG0WenlaU3nYMu1X16S%2Fu%2B%2FT1%2Fu8lK6Fub6XwE2Wrv4cnizfp4SbQ6p2Fn3s2oEfWPojI6AhdNi%2FmcP7PtZDjrVVT518Uf0mckEv7KhRjxXSYVAFRizmyvhlXtXiSCEcrsA8tcz8IigJW8zZP54hVhXM2Oxig4kkJwMNPX%2BbIGOpoBzvH%2BAUmXZk3ui6anSN36DK5F82V1ZHaf6dHNBL10%2BaE6ODuo9T%2Fg9e2fqr3Y7UyIis1x93sdh6s%2FGNy7pSO%2FjbVtA7NGspyYtt45L3w4%2F20WduTsIXYgIsLdzGecHBjKXh7moM2ae1WR%2BauQSVXmJ1mrJsmFcwMn%2BgUUYy1CirAuudcmP0iap6JEZoSgr3LSiGhJ%2BRYszZbvaQ%3D%3D&Expires=1717467719"
    pip:
      - ray
      - transformers
      - datasets
      - numpy
      - evaluate
      - boto3

    # env_vars:
    #   counter_name: "test_counter"

  # Suspend specifies whether the RayJob controller should create a RayCluster instance.
  # If a job is applied with the suspend field set to true, the RayCluster will not be created and we will wait for the transition to false.
  # If the RayCluster is already created, it will be deleted. In the case of transition to false, a new RayCluster will be created.
  # suspend: true

  # rayClusterSpec specifies the RayCluster instance to be created by the RayJob controller.

  clusterSelector:
    ray.io/cluster: ray-cluster-train-kuberay
